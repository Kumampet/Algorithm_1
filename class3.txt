アルゴリズムとデータ構造３回目

データ構造＝データの集合＋操作＋制約(ルール)
例）
スタック→集合：配列、操作：push(x),pop()、制約：LIFO(Last In First Out)
１次元配列で表現可能。スタックの一番上(頂点)をTopを使って示す。
スタックが空の時はTopが0のとき。
キュー→集合：配列、操作：enqueue(x), dequeue、制約：FIFO(First In First Out)
一次元配列上にTopとTailを置く。Topは先頭にある値に置かれ、Tailは末尾にある値に置かれる。[スライド13]
配列外に値が入りそうになったら？→リングバッファの考えを使う。配列の要素を超えたら強制的に0で初期化。
Tail+1がTopに重なるときが満タンであるということ。

Ｏ（1）：入力の大きさに限らず定数倍できる

番兵(sentinel)
連結リストはポインタ制御なので、難しい
矢印のつなぎ替えがうまくいくか

番兵と二重連結リストの操作
・リストから値をｓｅａｒｃｈする
・リストに値を挿入する
・リストから値を削除する。

[スライド24]
削除方法：ただし、メモリ上からは削除せず「値がなかったことにする」方法。